type Query {
  greeting(name: String, company: String): String!
  userDetails: User!
  users(search: String): [User!]!
  blogDetails: Blog!
  blogs(search: String): [Blog!]!
  comments: [Comment!]!
}

type Mutation {
  createUser(data: createUserInput): User!
  updateUser(id: ID!, data: updateUserInput!): User!
  deleteUser(id: ID!): User!
  createBlog(data: createBlogInput): Blog!
  deleteBlog(id: ID!): Blog!
  createComment(data: createCommentInput): Comment!
  deleteComment(id: ID!): Comment!
}

input createUserInput {
  name: String!
  email: String!
  age: Int
}

input updateUserInput {
  name: String
  email: String
  age: Int
}

input createBlogInput {
  title: String!
  body: String!
  published: Boolean!
  author: ID!
}

input createCommentInput {
  text: String!
  author: ID!
  blog: ID!
}

type User {
  id: ID!
  name: String!
  email: String!
  age: Int
  blogs: [Blog!]!
  comments: [Comment!]!
}

type Blog {
  id: ID!
  title: String!
  body: String!
  published: Boolean!
  author: User!
  comments: [Comment!]!
}

type Comment {
  id: ID!
  text: String!
  author: User!
  blog: Blog!
}
